# Obfuscated with PyObfuscate Modern
# Original: https://www.github.com/htr-tech
# Updated: May 2025
# Time: Thu Jul 17 14:23:58 2025
# ---------------------------------
_ = lambda __: __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))